"""Upgrade Migrations

Revision ID: 7ceb13dce186
Revises: 47dc92a1f04a
Create Date: 2024-06-07 13:52:56.894105

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7ceb13dce186'
down_revision: Union[str, None] = '47dc92a1f04a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('train',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.CHAR(length=3), nullable=False),
    sa.Column('type', sa.Enum('TRAIN', 'ELECTRIC_TRAIN', name='traintype'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number')
    )
    op.drop_table('transports')
    op.drop_constraint('carriages_train_id_fkey', 'carriages', type_='foreignkey')
    op.create_foreign_key(None, 'carriages', 'train', ['train_id'], ['id'])
    op.add_column('flights', sa.Column('where_from_id', sa.Integer(), nullable=False))
    op.add_column('flights', sa.Column('where_to_id', sa.Integer(), nullable=False))
    op.drop_constraint('flights_where_fkey', 'flights', type_='foreignkey')
    op.drop_constraint('flights_train_id_fkey', 'flights', type_='foreignkey')
    op.drop_constraint('flights_where_from_fkey', 'flights', type_='foreignkey')
    op.create_foreign_key(None, 'flights', 'locations', ['where_to_id'], ['id'])
    op.create_foreign_key(None, 'flights', 'locations', ['where_from_id'], ['id'])
    op.create_foreign_key(None, 'flights', 'train', ['train_id'], ['id'])
    op.drop_column('flights', 'where')
    op.drop_column('flights', 'where_from')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('flights', sa.Column('where_from', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('flights', sa.Column('where', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'flights', type_='foreignkey')
    op.drop_constraint(None, 'flights', type_='foreignkey')
    op.drop_constraint(None, 'flights', type_='foreignkey')
    op.create_foreign_key('flights_where_from_fkey', 'flights', 'locations', ['where_from'], ['id'])
    op.create_foreign_key('flights_train_id_fkey', 'flights', 'transports', ['train_id'], ['id'])
    op.create_foreign_key('flights_where_fkey', 'flights', 'locations', ['where'], ['id'])
    op.drop_column('flights', 'where_to_id')
    op.drop_column('flights', 'where_from_id')
    op.drop_constraint(None, 'carriages', type_='foreignkey')
    op.create_foreign_key('carriages_train_id_fkey', 'carriages', 'transports', ['train_id'], ['id'])
    op.create_table('transports',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('number', sa.CHAR(length=3), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('TRAIN', 'ELECTRIC_TRAIN', name='traintype'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='transports_pkey'),
    sa.UniqueConstraint('number', name='transports_number_key')
    )
    op.drop_table('train')
    # ### end Alembic commands ###
