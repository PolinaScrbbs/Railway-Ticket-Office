"""Initial Migrate

Revision ID: 47dc92a1f04a
Revises: 
Create Date: 2024-06-06 20:18:56.462501

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '47dc92a1f04a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login', sa.String(length=20), nullable=False),
    sa.Column('password_hash', sa.String(length=60), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'USER', name='role'), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('surname', sa.String(length=20), nullable=False),
    sa.Column('patronymic', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_table('seats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('seat_number', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.CHAR(length=3), nullable=False),
    sa.Column('type', sa.Enum('TRAIN', 'ELECTRIC_TRAIN', name='traintype'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number')
    )
    op.create_table('carriages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('train_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('RESERVED_SEAT', 'COMPARTMENT', 'FC', 'LUXURY', 'SEDENTARY', name='carriagetype'), nullable=False),
    sa.ForeignKeyConstraint(['train_id'], ['transports.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('carriage_seat_association',
    sa.Column('carriage_id', sa.Integer(), nullable=False),
    sa.Column('seat_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['carriage_id'], ['carriages.id'], ),
    sa.ForeignKeyConstraint(['seat_id'], ['seats.id'], ),
    sa.PrimaryKeyConstraint('carriage_id', 'seat_id'),
    sa.UniqueConstraint('seat_id')
    )
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('flights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('where_from', sa.Integer(), nullable=False),
    sa.Column('where', sa.Integer(), nullable=False),
    sa.Column('train_id', sa.Integer(), nullable=False),
    sa.Column('departure_time', sa.DateTime(), nullable=False),
    sa.Column('arrival_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['train_id'], ['transports.id'], ),
    sa.ForeignKeyConstraint(['where'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['where_from'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('train_id')
    )
    op.create_table('tickets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('flight_id', sa.Integer(), nullable=False),
    sa.Column('seat_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('is_round_trip', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['flight_id'], ['flights.id'], ),
    sa.ForeignKeyConstraint(['seat_id'], ['seats.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('seat_id')
    )
    op.create_table('reservations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticket_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reservations')
    op.drop_table('tickets')
    op.drop_table('flights')
    op.drop_table('locations')
    op.drop_table('carriage_seat_association')
    op.drop_table('carriages')
    op.drop_table('transports')
    op.drop_table('seats')
    op.drop_table('users')
    # ### end Alembic commands ###
